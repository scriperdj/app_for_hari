<h3 style="padding-bottom: 30px;"><%= @gallery.name %> </h3>

<div class="whistles whistles-toggle">
          <h3 style="float:right;" class="whistle-title">Add photos</h3>
          <div class="whistle-content" >
            <%= form_for :image, url: ajoke_save_images_path , :html => { :multipart => true, :id => "fileupload"  } do |f| %>
            <div class=" fileupload-buttonbar">


                <div class="column-grid column-grid-5">

                  <div class="column column-span-2 column-push-0 column-first">
                  <p>
                    Add photos to the gallery
                  </p>
                  <!-- The global progress state -->
                        <div id="progressbar" class="col-lg-5 fileupload-progress fade">
                            <!-- The global progress bar -->
                            <div class="progress progress-striped active" role="progressbar" aria-valuemin="0" aria-valuemax="100">
                                <div class="progress-bar progress-bar-success" style="width:0%;"></div>
                            </div>
                            <!-- The extended global progress state -->
                            <div class="progress-extended">&nbsp;</div>
                        </div>
                  </div>
                  <div class="column column-span-3 column-push-0 column-last">
                    <input id="image_file" type="file" style="visibility: hidden;height: 0;width: 0;display: block;" multiple="multiple" name="image[image][]">
                    <input class="button blue" type="button" value="Browse" id="browse" />
                    <input type="hidden" value='<%=params[:gallery] %>' name="image[gallery_id]" />


                  </div>

                  <!-- The table listing the files available for upload/download -->
                  <table role="presentation" class="table table-striped"><tbody class="files"></tbody></table>
                </div>


              </div>

            <% end %>
          </div>
</div>


<div id="uploaded_img">
<!-- Gallery __-->


    <%= render '/ajoke/uploaded_images' %>

</div>
<!-- The Templates plugin is included to render the upload/download listings -->
<script src="/javascripts/tmpl.min.js"></script>
<!-- include accordion / tabs plugin -->
<script src="/javascripts/whistles.min.js"></script>


<!-- The template to display files available for upload -->
<script id="template-upload" type="text/x-tmpl">
{% for (var i=0, file; file=o.files[i]; i++) { %}
    <tr class="template-upload fade">
        <td>
            <span class="preview"></span>
        </td>
        <td>
            <p class="name">{%=file.name%}</p>
        </td>
        <td>
            <p class="size">Processing...</p>
            <div class="progress progress-striped active" role="progressbar" aria-valuemin="0" aria-valuemax="100" aria-valuenow="0"><div class="progress-bar progress-bar-success" style="width:0%;"></div></div>
        </td>
        <td>
            {% if (!i && !o.options.autoUpload) { %}
                <button class="btn btn-primary start" disabled>
                    <i class="glyphicon glyphicon-upload"></i>
                    <span>Start</span>
                </button>
            {% } %}
            {% if (!i) { %}
                <button class="btn btn-warning cancel">
                    <i class="glyphicon glyphicon-ban-circle"></i>
                    <span>Cancel</span>
                </button>
            {% } %}
        </td>
    </tr>
{% } %}
</script>
<!-- The template to display files available for download -->
<script id="template-download" type="text/x-tmpl">
{% for (var i=0, file; file=o.files[i]; i++) { %}
    <tr class="template-download fade">
        <td>
            <span class="preview">
                {% if (file.thumbnailUrl) { %}
                    <a href="{%=file.url%}" title="{%=file.name%}" download="{%=file.name%}" data-gallery><img height=50 src="{%=file.thumbnailUrl%}"></a>
                {% } %}
            </span>
        </td>
        <td>
            <p class="name">
                {% if (file.url) { %}
                    <a href="{%=file.url%}" title="{%=file.name%}" download="{%=file.name%}" {%=file.thumbnailUrl?'data-gallery':''%}>{%=file.name%}</a>
                {% } else { %}
                    <span>{%=file.name%}</span>
                {% } %}
            </p>
            {% if (file.error) { %}
                <div><span class="label label-danger">Error</span> {%=file.error%}</div>
            {% } %}
        </td>
        <td>
            <span class="size">{%=o.formatFileSize(file.size)%}</span>
        </td>
        <td>
            {% if (file.deleteUrl) { %}
                <button class="btn btn-danger delete" data-type="{%=file.deleteType%}" data-url="{%=file.deleteUrl%}"{% if (file.deleteWithCredentials) { %} data-xhr-fields='{"withCredentials":true}'{% } %}>
                    <i class="glyphicon glyphicon-trash"></i>
                    <span>Delete</span>
                </button>
                <input type="checkbox" name="delete" value="1" class="toggle">
            {% } else { %}
                <button class="btn btn-warning cancel">
                    <i class="glyphicon glyphicon-ban-circle"></i>
                    <span>Close</span>
                </button>
            {% } %}
        </td>
    </tr>
{% } %}
</script>


<script>
$(function () {



  //$("#uploaded_img").load('/ajoke/uploaded_images?gallery=<%=params[:gallery] %>');

  $("#uploaded_img").on("click","#cover_img",function(event){
    //console.log("here?");
    toastr['success']("Cover image updated for the gallery");
    $.ajax({
         type: "POST",
         url: '/ajoke/update_cov',
         dataType: 'json',
         data : "img="+ $(this).attr('data-id') + "&gal=" + <%= params[:gallery]%>,
         success: function(result) {
              console.log(result);

             }

     });
  });
  $("input:file").change(function (){
       $('#uploaded_img').hide();
       $("#progressbar").show();
     });
  $("#progressbar").hide();
    $('#browse').click(function() { $('#image_file').click();  });
    'use strict';
    // Initialize the jQuery File Upload widget:
    $('#fileupload').fileupload({
      acceptFileTypes: /(\.|\/)(gif|jpe?g|png)$/i,
      //url : '<%= ajoke_save_cover_path %>'
      autoUpload: true
  /*  progressall: function (e, data) {
          var progress = parseInt(data.loaded / data.total * 100, 10);
          $('#progress .progress-bar').css(
              'width',
              progress + '%'
          );
    } */
  });
  // Load existing files:
    $('#fileupload').addClass('fileupload-processing');
    $.ajax({
            // Uncomment the following to send cross-domain cookies:
            //xhrFields: {withCredentials: true},
            url: $('#fileupload').fileupload('option', 'url'),
            dataType: 'json',
            context: $('#fileupload')[0]
        }).always(function () {
            $(this).removeClass('fileupload-processing');
        }).done(function (result) {
            $(this).fileupload('option', 'done')
                .call(this, $.Event('done'), {result: result});

        });
  $("#fileupload").bind("fileuploaddone", function (e, data) {
    toastr['success']("Cover image updated with " + data.result.files[0].name);
    $("#progressbar").hide();
  //  window.location.href = '<%=ajoke_upload_images_path %>?gallery=<%=params[:gallery] %>';

  });

  // masonry gallery
	var $masonry_gallery = jQuery('.masonry-gallery.gallery');
	if ( $masonry_gallery.length > 0 ) {

		$masonry_gallery.each( function(index, element) {
			var $masonry_items = $(element).find('.gallery-item');

			// set masonry layout
			$(element).isotope({
				masonry: { columnWidth: $(element).find('.gallery-item')[0] },
				itemSelector: '.gallery-item'
			});
			$(element).isotope('layout');

			// filtering
			jQuery('#gallery-filter li a').on('click', function(){
				jQuery('#gallery-filter li a').removeClass('active');
				jQuery(this).addClass('active');
				var selector = jQuery(this).attr('data-filter');
				$masonry_gallery.isotope({ filter: selector });
				return false;
			});

			// changing layout
			jQuery('#grid-changer li a').on('click', function(){
				jQuery('#grid-changer li a').removeClass('active');
				jQuery(this).toggleClass('active');

				$masonry_items.removeClass('col-3');
				$masonry_items.removeClass('col-4');
				$masonry_items.removeClass('col-5');
				$masonry_items.toggleClass(jQuery(this).closest('li').attr('class'));
				$masonry_gallery.isotope('layout');
			});

		});
	}
});
</script>
