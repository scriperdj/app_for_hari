<!-- Heading ___-->
<%= form_for :picture, url: ajoke_save_cover_path , :html => { :id => "fileupload"  } do |f| %>
<div class=" fileupload-buttonbar">
    <div class="progressbar fileupload-progressbar nofade"><div style="width:0%;"></div></div>
    <div class="column-grid column-grid-5">
      <div class="column column-span-2 column-push-0 column-first">
      <p>
      <span>Change Home page cover</span><br/>
      <small>Aspect ratio : 1600 x 1100 px</small>
      </p>
      </div>
      <div class="column column-span-3 column-push-0 column-last">
        <input id="picture_image" type="file" style="visibility: hidden;height: 0;width: 0;display: block;" name="picture[image]">
        <input class="button blue" type="button" value="Browse" id="browse" />
      </div>
      <!-- The table listing the files available for upload/download -->
      <table role="presentation" class="table table-striped"><tbody class="files"></tbody></table>
    </div>


  </div>

<% end %>
<!-- The template to display files available for upload -->
<script id="template-upload" type="text/x-tmpl">
{% for (var i=0, file; file=o.files[i]; i++) { %}
    <tr class="template-upload fade">
        <td>
            <span class="preview"></span>
        </td>
        <td>
            <p class="name">{%=file.name%}</p>
        </td>
        <td>
            <p class="size">Processing...</p>
            <div class="progress progress-striped active" role="progressbar" aria-valuemin="0" aria-valuemax="100" aria-valuenow="0"><div class="progress-bar progress-bar-success" style="width:0%;"></div></div>
        </td>
        <td>
            {% if (!i && !o.options.autoUpload) { %}
                <button class="btn btn-primary start" disabled>
                    <i class="glyphicon glyphicon-upload"></i>
                    <span>Start</span>
                </button>
            {% } %}
            {% if (!i) { %}
                <button class="btn btn-warning cancel">
                    <i class="glyphicon glyphicon-ban-circle"></i>
                    <span>Cancel</span>
                </button>
            {% } %}
        </td>
    </tr>
{% } %}
</script>
<!-- The template to display files available for download -->
<script id="template-download" type="text/x-tmpl">
{% for (var i=0, file; file=o.files[i]; i++) { %}
    <tr class="template-download fade">
        <td>
            <span class="preview">
                {% if (file.thumbnailUrl) { %}
                    <a href="{%=file.url%}" title="{%=file.name%}" download="{%=file.name%}" data-gallery><img src="{%=file.thumbnailUrl%}"></a>
                {% } %}
            </span>
        </td>
        <td>
            <p class="name">
                {% if (file.url) { %}
                    <a href="{%=file.url%}" title="{%=file.name%}" download="{%=file.name%}" {%=file.thumbnailUrl?'data-gallery':''%}>{%=file.name%}</a>
                {% } else { %}
                    <span>{%=file.name%}</span>
                {% } %}
            </p>
            {% if (file.error) { %}
                <div><span class="label label-danger">Error</span> {%=file.error%}</div>
            {% } %}
        </td>
        <td>
            <span class="size">{%=o.formatFileSize(file.size)%}</span>
        </td>
        <td>
            {% if (file.deleteUrl) { %}
                <button class="btn btn-danger delete" data-type="{%=file.deleteType%}" data-url="{%=file.deleteUrl%}"{% if (file.deleteWithCredentials) { %} data-xhr-fields='{"withCredentials":true}'{% } %}>
                    <i class="glyphicon glyphicon-trash"></i>
                    <span>Delete</span>
                </button>
                <input type="checkbox" name="delete" value="1" class="toggle">
            {% } else { %}
                <button class="btn btn-warning cancel">
                    <i class="glyphicon glyphicon-ban-circle"></i>
                    <span>Cancel</span>
                </button>
            {% } %}
        </td>
    </tr>
{% } %}
</script>
<!-- The jQuery UI widget factory, can be omitted if jQuery UI is already included -->
<script src="/javascripts/vendor/jquery.ui.widget.js"></script>
<!-- The Templates plugin is included to render the upload/download listings -->
<script src="http://blueimp.github.io/JavaScript-Templates/js/tmpl.min.js"></script>
<!-- The Load Image plugin is included for the preview images and image resizing functionality -->
<script src="http://blueimp.github.io/JavaScript-Load-Image/js/load-image.all.min.js"></script>
<!-- The Iframe Transport is required for browsers without support for XHR file uploads -->
<script src="/javascripts/jquery.iframe-transport.js"></script>
<!-- The basic File Upload plugin -->
<script src="/javascripts/jquery.fileupload.js"></script>
<!-- The File Upload processing plugin -->
<script src="/javascripts/jquery.fileupload-process.js"></script>
<!-- The File Upload image preview & resize plugin -->
<script src="/javascripts/jquery.fileupload-image.js"></script>
<!-- The File Upload validation plugin -->
<script src="/javascripts/jquery.fileupload-validate.js"></script>
<!-- The File Upload user interface plugin -->
<script src="/javascripts/jquery.fileupload-ui.js"></script>

<script>
$(function () {
    $('#browse').click(function() { $('#picture_image').click(); });


    'use strict';

    // Initialize the jQuery File Upload widget:
    $('#fileupload').fileupload({
      //url : '<%= ajoke_save_cover_path %>'
      autoUpload: true

  /*  progressall: function (e, data) {
          var progress = parseInt(data.loaded / data.total * 100, 10);
          $('#progress .progress-bar').css(
              'width',
              progress + '%'
          );
    } */


  });


  // Load existing files:
    $('#fileupload').addClass('fileupload-processing');
    $.ajax({
            // Uncomment the following to send cross-domain cookies:
            //xhrFields: {withCredentials: true},
            url: $('#fileupload').fileupload('option', 'url'),
            dataType: 'json',
            context: $('#fileupload')[0]
        }).always(function () {
            $(this).removeClass('fileupload-processing');
        }).done(function (result) {
            $(this).fileupload('option', 'done')
                .call(this, $.Event('done'), {result: result});
        });

  $("#fileupload").bind("fileuploaddone", function (e, data) {
    toastr['success']("Cover image updated with " + data.result.files[0].name);
  });
});

</script>
